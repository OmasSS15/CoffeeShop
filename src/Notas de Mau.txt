rafce: Comnando para importar una funcion de react en automatico
¿Que es un Componente?: Es una pieza de codigo que se puede reutilizar

header.navbar: Te pone la etiqueta header + una clase
nav.logo: Te pone la etiqueta nav + una clase

./ -> Significa que esta en el mismo nivel de carpetas
../ -> Significa que esta en otro nivel superior de carpetas

1rem = 16px
Hover: Efecto para hacer que las cosas de css parezcan que floten o aumenten el tamaño
aysnc:  Puede realizar operaciones que toman tiempo (como llamadas a una API) sin bloquear el flujo del código.
await: Su propósito es esperar a que la promesa se resuelva o rechace antes de continuar con el resto del código.

---------------------------------------------------------------------------------------------------------------------------

REACT:
6. npm install (Para instalar los modulos)
7. npm run dev (Para ver si funciona)
8. git pull (Este comando sirve para que te muestre todos los cambios realizados y no se pierdan los commits de los demás)
9. git add .
10. git commit -m " mensaje "
11. git push

---------------------------------------------------------------------------------------------------------------------------

Instalar este paquete para el funcionamiento de las rutas:
npm install react-router-dom

Instalar el paquete para el sequelize que permite la conexión en la BD (Esto va en el node):
cd node
npm i express cors mysql2 sequelize

Instalar Axios para hacer peticiones al Backend:
npm install axios

Paquete de Font Awesome:
1. Add SVG Core:
npm i --save @fortawesome/fontawesome-svg-core

2. Add Icon Packages:
npm i --save @fortawesome/free-solid-svg-icons
npm i --save @fortawesome/free-regular-svg-icons
npm i --save @fortawesome/free-brands-svg-icons

3. Add the React Component:
npm i --save @fortawesome/react-fontawesome@latest

---------------------------------------------------------------------------------------------------------------------------

Comandos:
node app.js -> para encender el servidor y activar la conexión

---------------------------------------------------------------------------------------------------------------------------

Thunder Client
Metodo GET
Para mostrar todos los registros: http://localhost:8000/empleados/
Para mostrar solo un registro: http://localhost:8000/empleados/3

Metodo POST
Para crear un registro: http://localhost:8000/empleados/
En BODY > JSON
{
  "nombre": "Cristina",
  "apellido": "Suárez Luna",
  "puesto": "Empleado",
  "salario": 1500,
  "fecha_contratacion": "2010-11-30T12:00:00"
}

Metodo PUT
Para actualizar un registro: http://localhost:8000/empleados/5
En BODY > JSON
Debes poner el id en la ruta que vas a actualizar
{
  "nombre": "Kristen",
  "apellido": "Suárez Luna",
  "puesto": "Gerente",
  "salario": 3000,
  "fecha_contratacion": "2010-11-30T12:00:00"
}

Metodo DELETE
Para eliminar un registro: http://localhost:8000/empleados/5

